{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectedTodoId","selectedUserId","className","map","id","title","completed","userId","classNames","type","onClick","TodoFilter","setFilteredBy","filteredBy","setQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","TodoModal","useState","user","setUser","setTodos","useEffect","loadData","a","all","userFromServer","todosFromServer","selectedTodos","filter","closeModal","href","email","name","App","isLoading","setIsLoading","setUserId","setSelectedTodo","getedTodos","filteredTodos","filterType","todo","toLocaleLowerCase","includes","filteredTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93bb65d1.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: (value: number) => void,\n  selectedTodoId: number,\n  selectedUserId: (value: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectedTodoId,\n  selectedUserId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id, title, completed, userId,\n        }) => (\n          <>\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className={classNames('is-vcentered',\n                {\n                  'is-expanded': !completed,\n                })}\n              >\n                <p className={\n                  completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                {selectedTodoId === id\n                  ? (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        selectedTodo(0);\n                        selectedUserId(0);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye-slash\" />\n                      </span>\n                    </button>\n                  )\n                  : (\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => {\n                        selectedTodo(id);\n                        selectedUserId(userId);\n                      }}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  )}\n              </td>\n            </tr>\n          </>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilteredBy: (value: string) => void;\n  setQuery: (value: string) => void;\n  filteredBy: string,\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilteredBy,\n  filteredBy,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filteredBy}\n          onChange={(event) => setFilteredBy(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n        // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getTodos, getUser } from '../../api';\n\ntype Props = {\n  userId: number;\n  selectedTodoId: number;\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  selectedTodoId,\n  selectedTodo,\n  selectedUserId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const [userFromServer, todosFromServer] = await Promise.all(\n        [getUser(userId), getTodos()],\n      );\n\n      setUser(userFromServer);\n      setTodos(todosFromServer);\n    };\n\n    loadData();\n  }, []);\n\n  const selectedTodos = todos.filter(({ id }) => id === selectedTodoId);\n\n  const closeModal = () => {\n    selectedTodo(0);\n    selectedUserId(0);\n  };\n\n  return (\n    // eslint-disable-next-line react/jsx-wrap-multilines\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            {selectedTodos.map(({ id, title, completed }) => (\n              <>\n                <header className=\"modal-card-head\">\n                  <div\n                    className=\"modal-card-title has-text-weight-medium\"\n                    data-cy=\"modal-header\"\n                  >\n                    {`Todo #${id}`}\n                  </div>\n\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  <button\n                    type=\"button\"\n                    className=\"delete\"\n                    data-cy=\"modal-close\"\n                    onClick={closeModal}\n                  />\n                </header>\n\n                <div className=\"modal-card-body\">\n                  <p className=\"block\" data-cy=\"modal-title\">\n                    {title}\n                  </p>\n\n                  <p className=\"block\" data-cy=\"modal-user\">\n                    {completed === true\n                      ? (<strong className=\"has-text-success\">Done</strong>)\n                      : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                    {' by '}\n\n                    <a href={`mailto:${user.email}`}>\n                      {user.name}\n                    </a>\n                  </p>\n                </div>\n              </>\n            ))}\n          </div>\n        )}\n    </div>);\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport function filteredTodo(\n  todos: Todo[],\n  filterType: string,\n  query: string,\n) {\n  const filterBy = todos.filter((todo) => {\n    switch (filterType) {\n      case 'completed':\n        return todo.completed;\n\n      case 'active':\n        return !todo.completed;\n\n      default:\n        return todo;\n    }\n  });\n\n  return filterBy.filter(({ title }) => (\n    title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  ));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userId, setUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [filteredBy, setFilteredBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const todosFromServer = async () => {\n      const getedTodos = await getTodos();\n\n      setTodos(getedTodos);\n      setIsLoading(false);\n    };\n\n    todosFromServer();\n  }, []);\n\n  const filteredTodos = filteredTodo(todos, filteredBy, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteredBy={setFilteredBy}\n                setQuery={setQuery}\n                filteredBy={filteredBy}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={setSelectedTodo}\n                    selectedTodoId={selectedTodo}\n                    selectedUserId={setUserId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo\n      && (\n        <TodoModal\n          userId={userId}\n          selectedTodoId={selectedTodo}\n          selectedTodo={setSelectedTodo}\n          selectedUserId={setUserId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}